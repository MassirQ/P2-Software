import { Integer } from "neo4j-driver";
/** Checks if value is string */
export declare function isString(value: unknown): value is string;
/** Checks if value is a Neo4j int object */
export declare function isNeoInt(value: unknown): value is Integer;
/** Joins all strings with given separator, ignoring empty or undefined statements */
export declare function joinStrings(statements: string | Array<string | undefined>, separator?: string): string;
/** Makes sure input is an array, if not it turns into an array (empty array if input is null or undefined) */
export declare function asArray<T>(raw: T | Array<T> | undefined | null): Array<T>;
/** Filter all elements in an array, only leaving truthy values */
export declare function filterTruthy(arr: Array<boolean | null | undefined>): Array<true>;
export declare function filterTruthy<T>(arr: Array<T | null | undefined>): Array<T>;
/** Check if both arrays share at least one element */
export declare function haveSharedElement(arr1: Array<any>, arr2: Array<any>): boolean;
/** Removes duplicate elements of an array */
export declare function removeDuplicates<T>(arr: T[]): T[];
/** Awaitable version of setTimeout */
export declare function delay(ms: number): Promise<void>;
//# sourceMappingURL=utils.d.ts.map