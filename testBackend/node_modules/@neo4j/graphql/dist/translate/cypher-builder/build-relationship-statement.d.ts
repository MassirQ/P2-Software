import { Context, RelationField } from "../../types";
import { Node } from "../../classes";
import { CypherStatement } from "../types";
declare type NodeOptions = {
    varName: string;
    node?: Node;
    parameters?: Record<string, any>;
} | {
    varName?: string;
    node: Node;
    parameters?: Record<string, any>;
};
declare type TargetRelation = {
    varName?: string;
    relationField: RelationField;
    parameters?: Record<string, any>;
};
export declare function buildRelationshipStatement({ sourceNode, targetNode, context, relationship, directed, }: {
    sourceNode: NodeOptions;
    targetNode: NodeOptions;
    relationship: TargetRelation;
    context: Context;
    directed?: boolean;
}): CypherStatement;
export {};
//# sourceMappingURL=build-relationship-statement.d.ts.map