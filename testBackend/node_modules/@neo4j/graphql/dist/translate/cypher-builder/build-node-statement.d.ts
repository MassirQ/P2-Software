import { Context } from "../../types";
import { CypherStatement } from "../types";
import { Node } from "../../classes";
declare type NodeStatementBasicOptions = {
    context: Context;
    parameters?: Record<string, any>;
};
declare type NodeExtraOptions = {
    varName?: string;
    node: Node;
} | {
    varName: string;
    node?: Node;
};
declare type NodeStatementOptions = NodeStatementBasicOptions & NodeExtraOptions;
export declare function buildNodeStatement({ varName, node, context, parameters }: NodeStatementOptions): CypherStatement;
export {};
//# sourceMappingURL=build-node-statement.d.ts.map