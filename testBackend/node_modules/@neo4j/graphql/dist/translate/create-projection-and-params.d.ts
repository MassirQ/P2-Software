import { ResolveTree } from "graphql-parse-resolve-info";
import { Node } from "../classes";
import { Context } from "../types";
interface ProjectionMeta {
    authValidateStrs?: string[];
    connectionFields?: ResolveTree[];
    interfaceFields?: ResolveTree[];
}
declare function createProjectionAndParams({ resolveTree, node, context, chainStr, varName, literalElements, resolveType, inRelationshipProjection, }: {
    resolveTree: ResolveTree;
    node: Node;
    context: Context;
    chainStr?: string;
    varName: string;
    literalElements?: boolean;
    resolveType?: boolean;
    inRelationshipProjection?: boolean;
}): [string, any, ProjectionMeta?];
export default createProjectionAndParams;
//# sourceMappingURL=create-projection-and-params.d.ts.map